{"version":3,"sources":["App.js","index.js"],"names":["ErrorBoundary","props","state","hasError","console","log","this","setState","error","children","Component","App","useState","commits","setCommits","useTransition","isPending","startTransition","time","setTimer","accessToken","setAccessToken","accessTokenMessage","setAccessTokenMessage","fetchCommits","token","sessionStorage","getItem","fetch","headers","Accept","Authorization","fetchedCommits","json","finalData","timer","useCallback","val","sec","setInterval","clearInterval","useEffect","getFormattedDate","date","Date","toDateString","split","month","getFullYear","toString","third","fourth","hour","getHours","min","getMinutes","length","meridian","className","direction","type","onBlur","e","target","value","setItem","onClick","map","index","commit","author","name","message","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.7113c92f.chunk.js","sourcesContent":["import \"./styles.css\";\r\nimport {\r\n  useEffect,\r\n  useState,\r\n  Suspense,\r\n  Component,\r\n  useTransition,\r\n  useCallback,\r\n} from \"react\";\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n  componentDidCatch() {\r\n    console.log(\"Inside component Did catch\");\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError) {\r\n      return <div>Loading Failed{error}</div>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\nexport default function App() {\r\n  const [commits, setCommits] = useState([]);\r\n  const [isPending, startTransition] = useTransition();\r\n  const [time, setTimer] = useState(30);\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [accessTokenMessage, setAccessTokenMessage] = useState(\"\");\r\n  const fetchCommits = async () => {\r\n    console.log(\"Fetch Commits\");\r\n    const token = sessionStorage.getItem(\"token\");\r\n    console.log(token);\r\n    if (token) {\r\n      try {\r\n        const fetchedCommits = await fetch(\r\n          \"https://api.github.com/repos/hpeddula/GainSight-Test/commits\",\r\n          {\r\n            headers: {\r\n              Accept: \"application/vnd.github+json\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        const finalData = await fetchedCommits.json();\r\n        startTransition(() => {\r\n          setCommits(finalData);\r\n        });\r\n        setAccessTokenMessage(\"\");\r\n      } catch (e) {\r\n        setCommits([]);\r\n      }\r\n    } else {\r\n      setAccessTokenMessage(\"Enter Access Token to get Git Commits\");\r\n    }\r\n  };\r\n  const timer = useCallback(\r\n    (val) => {\r\n      var sec = val;\r\n      var timer = setInterval(() => {\r\n        setTimer(sec);\r\n        sec--;\r\n        if (sec < 0) {\r\n          clearInterval(timer);\r\n        }\r\n      }, 1000);\r\n    },\r\n    [setTimer]\r\n  );\r\n  useEffect(() => {\r\n    if (accessToken) timer(30);\r\n  }, [timer, accessToken]);\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      fetchCommits();\r\n      timer(30);\r\n    }\r\n  }, [time, timer]);\r\n\r\n  useEffect(() => {\r\n    fetchCommits();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      fetchCommits();\r\n    }\r\n  }, [accessToken]);\r\n  const getFormattedDate = (date) => {\r\n    const [, month, ,] = new Date(date).toDateString().split(\" \");\r\n    const [, , third, fourth] = new Date(date)\r\n      .getFullYear()\r\n      .toString()\r\n      .split(\"\");\r\n    const hour = new Date(date).getHours();\r\n    const min =\r\n      new Date(date).getMinutes().toString().length === 1\r\n        ? `0${new Date(date).getMinutes().toString()}`\r\n        : new Date(date).getMinutes();\r\n    const meridian = hour >= 12 ? \"PM\" : \"AM\";\r\n    return `${month} ${third}${fourth}, ${hour}:${min} ${meridian} `;\r\n  };\r\n  const handleAccessToken = (token) => {\r\n    setAccessToken(token);\r\n    sessionStorage.setItem(\"token\", token);\r\n  };\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"App\">\r\n        {accessTokenMessage ? (\r\n          <div className=\"infoBanner\">\r\n            <marquee direction=\"right\">\r\n              <h4>{accessTokenMessage}</h4>\r\n            </marquee>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"container\">\r\n          <h2>Git Hub Commits</h2>\r\n          <h4>Timer :{time}</h4>\r\n          <input\r\n            type=\"text\"\r\n            onBlur={(e) => handleAccessToken(e.target.value)}\r\n          />\r\n          <button onClick={fetchCommits}>Refresh </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          <ul>\r\n            {commits.length ? (\r\n              !isPending ? (\r\n                commits?.map(\r\n                  (\r\n                    {\r\n                      commit: {\r\n                        author: { name, date },\r\n                        message,\r\n                      },\r\n                    },\r\n                    index\r\n                  ) => (\r\n                    <div key={index} className=\"card\">\r\n                      <h5>{message} </h5>\r\n                      <h6>\r\n                        {getFormattedDate(date)} by {name}\r\n                      </h6>\r\n                    </div>\r\n                  )\r\n                )\r\n              ) : (\r\n                <h2>Loading....</h2>\r\n              )\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}